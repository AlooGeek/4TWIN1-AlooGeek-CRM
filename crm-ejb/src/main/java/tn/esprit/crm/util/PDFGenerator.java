package tn.esprit.crm.util;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;

import javax.ejb.EJB;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.List;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import com.itextpdf.text.pdf.PdfWriter;

import tn.esprit.crm.dao.IDocumentDao;
import tn.esprit.crm.dao.impl.DocumentDaoImp;
import tn.esprit.crm.entities.Document_line;
import tn.esprit.crm.services.IDocumentService;
import tn.esprit.crm.services.impl.DocumentServiceImp;


public class PDFGenerator {
	
	@PersistenceContext
	static
	EntityManager em;
    private static String FILE = "C:\\Users\\malou\\OneDrive\\Documents\\PIDEV_TWIN1\\4TWIN1-AlooGeek-CRM-master\\pdf_directory\\response1.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);
    private static Font smallBoldTot = new Font(Font.FontFamily.TIMES_ROMAN, 12,
             Font.UNDERLINE);

    public void createPDF() {
    	try {
		  Document document = new Document();
        PdfWriter.getInstance(document, new FileOutputStream(FILE));
        document.open();
        addMetaData(document);
        addContent(document);
        document.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    }
  
    public void addMetaData(Document document) {
        document.addTitle("Your Documents");
        document.addSubject("Using iText");
        document.addKeywords("Java, PDF, iText");
        document.addAuthor("AlooGeek");
        document.addCreator("AlooGeek");
    }  


    public void addContent(Document document) throws DocumentException, FileNotFoundException, IOException {
    	 
        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(FILE));
        Paragraph anchor = new Paragraph();
        Paragraph anchor2 = new Paragraph();
        Paragraph anchor3 = new Paragraph();
        Paragraph anchor4 = new Paragraph();
        Paragraph anchor5 = new Paragraph();



        document.open();
        PdfContentByte cb = writer.getDirectContent();

        ColumnText ct = new ColumnText(cb);
        ColumnText ct2 = new ColumnText(cb);
        ColumnText ct3 = new ColumnText(cb);
        ColumnText ct4 = new ColumnText(cb);
        ColumnText ct5 = new ColumnText(cb);



        ct.setSimpleColumn(340f, 100f, 500f, 760f);
        ct2.setSimpleColumn(140f, 100f, 500f, 760f);
        ct3.setSimpleColumn(40f, 100f, 500f, 760f);
        ct4.setSimpleColumn(340f, 100f, 500f, 460f);
        ct5.setSimpleColumn(40f, 100f, 500f, 160f);

        DocumentServiceImp ds ;
        


        anchor.add(new Paragraph("Bill", catFont));
        anchor.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        // Second parameter is the number of the chapter
        anchor4.add(new Paragraph("Facturé à "));
        anchor3.add(new Paragraph("Envoyé à "));
        anchor2.add(new Paragraph("Facture N° "));
        anchor2.add(new Paragraph("Date "+ new Date()));     
        anchor2.add(new Paragraph("Commande N° "));
        anchor2.add(new Paragraph("Echéance"));
        ct.addElement(anchor2);
        ct2.addElement(anchor3);
        ct3.addElement(anchor4);
        
       ct.go();
       ct2.go();
       ct3.go();
       //add spacing
        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 5);
        anchor.add(paragraph);


        // add a table
        createTable(anchor);

       
       anchor5.add(new Paragraph("Total",smallBoldTot)) ;
       ct4.addElement(anchor5);
       ct4.go();
       Paragraph condition= new Paragraph("Payment conditions and modality",smallBold) ;
       Paragraph conds=new Paragraph("payment cannot pass 15 days ",redFont) ;
       ct5.addElement(condition);
       ct5.addElement(conds);
       ct5.go();

       
        // now add all this to the document
        document.add(anchor);

        document.close();

    }

    public void createTable(Paragraph anchor)
            throws BadElementException {

        PdfPTable table = new PdfPTable(5);
        table.setWidthPercentage(100);

        PdfPCell c1 = new PdfPCell(new Phrase("Product's Label"));

        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Quantity"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
    
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Unit Price"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        
        
        c1 = new PdfPCell(new Phrase(" Price HT "));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
      
        c1 = new PdfPCell(new Phrase(" Price ATI"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);

        table.addCell("SAMSUNG A30");
        table.addCell("5");
        table.addCell("900");
        table.addCell("900");
        table.addCell("1278");
        table.addCell("2000");

        anchor.add(table);

    }


    public void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}